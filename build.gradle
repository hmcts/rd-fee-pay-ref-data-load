plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'
  id 'org.springframework.boot' version '2.3.1.RELEASE'
  id 'org.owasp.dependencycheck' version '5.3.2.1'
  id 'com.github.ben-manes.versions' version '0.29.0'
  id 'org.sonarqube' version '3.0'
}

group = 'uk.gov.hmcts.reform.rd'
version = '0.0.1'

allprojects {
  sourceCompatibility = '11'
  targetCompatibility = '11'
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

checkstyle {
  maxWarnings = 0
  toolVersion = '8.29'
  getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

pmd {
  toolVersion = "6.18.0"
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  // https://github.com/pmd/pmd/issues/876
  ruleSets = []
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn test

sonarqube {
  properties {
    property "sonar.projectName", "rd-fee-pay-ref-data-load"
    property "sonar.projectKey", "uk.gov.hmcts.reform:rd-fee-pay-ref-data-load"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/**"
  }
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'config/owasp/suppressions.xml'

  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }
}

dependencyManagement {
  dependencies {
    dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.66'
    // CVE-2018-10237 - Unbounded memory allocation
    dependencySet(group: 'com.google.guava', version: '29.0-jre') {
      entry 'guava'
    }
  }
}

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
}

def versions = [
  junit              : '5.5.0',
  lombok             : '1.18.6',
  gradlePitest       : '1.3.0',
  pitest             : '1.4.2',
  reformHealthStarter: '0.0.5',
  reformLogging      : '5.1.1',
  reformS2sClient    : '3.1.1',
  sonarPitest        : '0.5',
  springBoot         : '2.3.1.RELEASE',
  springHystrix      : '2.1.1.RELEASE',
  swagger2Version    : '2.10.5',
  pact_version       : '3.5.24',
  rest_assured       : '3.3.0',
  feign_jackson      : '9.7.0'
]

ext.libraries = [
  junit5: [
    "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
    "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
    "org.junit.platform:junit-platform-engine:${versions.junitPlatform}"
  ]
]


dependencies {
  compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot)

  compile(group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: versions.springBoot)
  compile(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot)
  compile(group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.springBoot)
  compile(group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: versions.springBoot)
  compile(group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.1.0')
  compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
  compile group: 'org.json', name: 'json', version: '20200518'

  implementation 'com.squareup.okhttp3:okhttp:4.8.0'

  compile group: 'org.liquibase', name: 'liquibase-core', version: '3.10.0'

  //Added for Spring Security Implementation
  compile(group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: versions.springBoot)

  //Added for S2S and User Authentication
  compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.reformS2sClient
  compile(group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.4') {
    // TODO remove when auth-checker-lib upgrades its dependency to spring boot 2.0.x
    exclude group: 'uk.gov.hmcts.reform', module: 'java-logging-spring'
  }
  compile group: 'javax.inject', name: 'javax.inject', version: '1'
  compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.swagger2Version
  compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.swagger2Version
  compile group: 'io.springfox', name: 'springfox-spring-webmvc', version: versions.swagger2Version

  compile group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
  compile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.3.RELEASE'

  compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: '9.0.37'
  compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.37'
  compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.19.Final'
  compile group: 'org.springframework', name: 'spring-tx', version: '5.2.8.RELEASE'

  implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.14'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
  implementation "org.springframework.security:spring-security-web"
  implementation "org.springframework.security:spring-security-config"
  implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
  implementation 'uk.gov.hmcts.reform:idam-client:v1.5.4'
  implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '8.19'
  implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

  testCompile('com.opentable.components:otj-pg-embedded:0.13.3')
  testCompile('com.github.tomakehurst:wiremock-jre8:2.25.1')
  testCompile('org.springframework.cloud:spring-cloud-contract-wiremock:2.2.3.RELEASE')

  testCompile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'

  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
  testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit

  testCompile 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'

  testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot) {
    exclude group: 'junit', module: 'junit'
  }

  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.2.3.RELEASE'


  testCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured
  testCompile group: 'io.github.openfeign', name: 'feign-jackson', version: versions.feign_jackson

  smokeTestCompile group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
  smokeTestCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
  smokeTestCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  smokeTestCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
  smokeTestCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured

  integrationTestCompile group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
  integrationTestCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
  integrationTestCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  integrationTestCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
  integrationTestCompile group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured

  integrationTestCompile sourceSets.main.runtimeClasspath
  integrationTestCompile sourceSets.test.runtimeClasspath

  functionalTestCompile sourceSets.main.runtimeClasspath
  functionalTestCompile sourceSets.test.runtimeClasspath

  compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  smokeTestCompile sourceSets.main.runtimeClasspath
  smokeTestCompile sourceSets.test.runtimeClasspath
  smokeTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  smokeTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

}
mainClassName = 'uk.gov.hmcts.reform.demo.Application'

bootJar {
  getArchiveFileName().set(provider {
    'rd-fee-pay-ref-data-load.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
